name: Claude Code

on:
  pull_request:
    types: [opened, reopened]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

concurrency:
  group: claude-${{ github.event.pull_request.number || github.event.issue.number || github.run_id }}
  cancel-in-progress: false

jobs:
  claude:
    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch' ||
      (contains(github.event.comment.body || github.event.review.body || github.event.issue.body || github.event.issue.title || '', '@claude') &&
       contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.comment.author_association || github.event.review.author_association || github.event.issue.author_association || 'OWNER'))

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - uses: actions/create-github-app-token@v2
        id: token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.token.outputs.token }}
          fetch-depth: 0

      - uses: thevibeworks/claude-code-action@main
        if: github.event_name != 'pull_request' || (!contains(github.event.pull_request.title, '[skip-review]') && !contains(github.event.pull_request.title, '[WIP]'))
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ steps.token.outputs.token }}
          allow_bot_actor: true
          prompt: |
            Security-focused systems engineer. Docker wrapper for Claude/Codex CLI with safe --dangerously-skip-permissions.
            Core expertise: container security, auth vectors, shell injection, privilege boundaries.
            Barkme when necessary.
            **PR Reviews**: Paranoid security audit. Find vulnerabilities before ship.
            **Issues/Comments**: Collaborative systems help.
            Philosophy:
            - Minimal comments; code + --help are docs
            - Linux-style bluntness. Be clear. Be concise. No hand-holding.
            - Fail fast and loud
            - Security first
            - Test all auth methods
            - Follow @workflows/ templates for git/gh ops"
          claude_args: |
            --model claude-sonnet-4-20250514
            --allowedTools Bash(gh:*),Bash(git:*),Bash(docker:*),Bash(make:*),Bash(./claude.sh:*),Bash(./claudeb.sh:*),Bash(shellcheck:*),mcp__barkme__notify
            --mcp-config '{
              "mcpServers": {
                "barkme": {
                  "command": "npx",
                  "args": ["@vibeworks/barkme-mcp-server"],
                  "env": {
                    "LOG_LEVEL": "debug",
                    "BARK_DEVICES": "${{ secrets.BARK_DEVICES }}",
                    "BARK_SERVER": "${{ secrets.BARK_SERVER }}",
                    "BARK_GROUP": "Claude YOLO",
                    "BARK_ICON": "https://avatars.githubusercontent.com/in/1452392",
                    "BARK_RETRY": "3",
                    "BARK_ASYNC": "false"
                  }
                }
              }
            }'
