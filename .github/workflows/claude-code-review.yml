name: Claude Code Review

on:
  pull_request:
    types: [opened, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:

concurrency:
  group: "claude-review-${{ github.event.pull_request.number || github.event.issue.number }}"
  cancel-in-progress: false

jobs:
  claude-review:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '@claude') &&
       (github.actor == github.repository_owner ||
        contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.comment.author_association)))

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      checks: write
      statuses: write

    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          permission-contents: write
          permission-pull-requests: write
          permission-issues: write

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.event.pull_request.merge_commit_sha }}

      - name: Run Claude Code Review
        id: claude-review
        if: |
          !contains(github.event.pull_request.title, '[skip-review]') &&
          !contains(github.event.pull_request.title, '[WIP]')
        uses: anthropics/claude-code-action@beta
        env:
          CLAUDE_CODE_MAX_OUTPUT_TOKENS: 8192
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          model: "claude-sonnet-4-20250514"
          github_token: ${{ steps.app-token.outputs.token }}
          allowed_tools: "Bash(docker:*),Bash(make:*),Bash(./claude.sh:*),Bash(shellcheck:*),Bash(gh:*)"
          direct_prompt: |
            You are a paranoid security engineer reviewing claude-code-yolo PRs. Your job: find vulnerabilities before they ship.

            Your expertise:
            - Container escape vectors and privilege boundaries
            - Shell injection patterns and input sanitization
            - Multi-auth token lifecycle management
            - Docker security hardening and volume mount risks

            Review priorities:
            - Container security, privilege escalation risks
            - Auth token handling, secret exposure
            - Directory traversal, dangerous path access
            - Shell command injection vectors
            - Dockerfile best practices, layer optimization
            - Volume mounting security, permission handling
            - Cross-platform compatibility (macOS/Linux)
            - Bash scripting robustness, error handling
            - Authentication method implementations
            - Installation script attack surfaces

            Be direct, ruthless about security. Flag risks immediately. Prefer self-documenting code over comments. Any useless or duplicate comments = PR rejected.
